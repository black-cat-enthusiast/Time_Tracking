---
title: "Cycle TrackR"
output: 
  flexdashboard::flex_dashboard:
    orientation: rows
    vertical_layout: fill
---

<style>                     
.navbar {

  background-color:pink;
  border-color:black;
}
.navbar-brand {
color:black!important;
}

.navbar, [data-toggle=tab], .navbar-brand  {   background-color:pink!important;   border-color:black;   color:black!important; }

</style>                    

```{r setup, include=FALSE}
library(flexdashboard)
library(tidyverse)
library(reshape2)
library(lubridate)
library(calendR)

data <- read_csv("data.csv")
```

# Cycle Parameters

Column {data-height=250}
-----------------------------------------------------------------------

### Current Cycle Day

```{r}
a <- as.Date(Sys.Date())

data$Date <- with(data, ymd(sprintf("%04d%02s%02d", Year, Month, Day)))

b <- data[data$Date == a, ]
c <- as.character(b$Cycle_Day)

ggplot()+
  theme_void()+
  ylim(0,1)+
  xlim(0,1)+
  annotate("text",x=0.5,y=0.5,label=c,size=33,colour="pink")
```


### Number of Cycles Tracked

```{r,ehco=FALSE,message=FALSE,warning=FALSE}
a <- data %>% 
  select("Cycles_Tracked") %>%
  na.omit() %>%
  group_by(Cycles_Tracked) %>%
  summarise(
    n=n()
  ) %>%
  summarise(
    cycle_count=max(Cycles_Tracked))

b <- as.character(a$cycle_count)

ggplot()+
  theme_void()+
  ylim(0,1)+
  xlim(0,1)+
  annotate("text",x=0.5,y=0.5,label=b,size=33,colour="pink")

```

### Average Cycle Length (days)

```{r,ehco=FALSE,message=FALSE,warning=FALSE}

a <- data %>% 
  select(c("Cycle_Day","Cycles_Tracked")) %>%
  na.omit() %>%
  group_by(Cycles_Tracked) %>%
  summarise(
    n=n()
  ) %>%
  summarise(
    mean=mean(n))

b <- a$mean
b <- format(round(b, 2), nsmall = 2)

ggplot()+
  theme_void()+
  ylim(0,1)+
  xlim(0,1)+
  annotate("text",x=0.5,y=0.5,label=b,size=33,colour="pink")

```

Column {data-width=450}
-----------------------------------------------------------------------

### Descriptive Statistics Summarising Cycle Parameters Over Time

```{r}
a <- data %>% 
  select(c("Cycle_Day","Cycles_Tracked")) %>%
  na.omit() %>%
  group_by(Cycles_Tracked) %>%
  summarise(
    n_1=n()
  ) %>% 
  summarise(
    `Number of Cycles`=max(Cycles_Tracked),
    `Mean Cycle Length`=mean(n_1),
    `Median Cycle Length`=median(n_1),
    `Shorted Recorded Cycle`=min(n_1),
    `Longest Recorded Cycle`=max(n_1),
    `Variance in Cycle Length`=var(n_1),
    `Standard Deviation of Cycle Length`=sd(n_1)
  ) %>%
  mutate(`Standard Error` = `Standard Deviation of Cycle Length` / sqrt(`Number of Cycles`)) %>%
  melt()

knitr::kable(a)
```

### Cycle Length Across Time

```{r}
data %>% 
  group_by(Cycles_Tracked) %>%
  summarise(
    n=n()
  ) %>%
  ggplot(aes(x=Cycles_Tracked,y=n))+
  geom_point(size=2,colour="pink")+
  geom_line(colour="pink")+
  theme_classic()+
  ylim(0,40)+
  labs(
    x="Number of Cycles Tracked",
    y="Cycle Length (days)"
  )
```

# Projections

Column {data-height=150}
-----------------------------------------------------------------------

### Current Cycle Progression

```{r}
period_length <- data %>%
  group_by(Cycles_Tracked) %>%
  filter(Value == "Period") %>%
  summarise(
    n=n()
  ) %>%
  summarise(
    av=mean(n)
  )

period_length <- as.numeric(period_length)

a <- data %>% 
  select(c("Cycle_Day","Cycles_Tracked")) %>%
  na.omit() %>%
  group_by(Cycles_Tracked) %>%
  summarise(
    n=n()
  ) %>%
  summarise(
    mean=mean(n))

av_cycle_length <- a$mean
av_cycle_length <- format(round(av_cycle_length, 2), nsmall = 2)
av_cycle_length <- as.numeric(av_cycle_length)
ovulation <- av_cycle_length - 14

a <- as.Date(Sys.Date())

data$Date <- with(data, ymd(sprintf("%04d%02s%02d", Year, Month, Day)))

b <- data[data$Date == a, ]
current_day <- as.numeric(b$Cycle_Day)

c <- ggplot()+
  xlim(1,30)+
  ylim(0,3)+
  theme_classic()+
  labs(
    x="Cycle Days",
    y=""
  )+
  annotate("rect",xmin=(ovulation - 4),xmax=(ovulation+1),ymin=0,ymax=2,alpha=0.2,fill="purple")+
  annotate("segment", x=ovulation, xend=ovulation,y=0,yend=2.5, colour="purple")+
  annotate("text",x=ovulation,y=2.65,label="Ovulation",colour="purple")+
  annotate("rect",xmin=1,xmax=period_length,ymin=0,ymax=2,alpha=0.3,fill="red")+
  annotate("text",x=3,y=2.15,label="Period",colour="pink")+
  annotate("segment",x=current_day,xend=current_day,y=0,yend=2.25)+
  annotate("text",x=current_day,y=2.35,label="Current Day")+
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.line.y = element_blank()
  )

ggsave("Current.png",c,height = 3,width=7,dpi=600)
knitr::include_graphics("Current.png")
```

Column {data-height=450}
-----------------------------------------------------------------------

### Future Cycles

```{r}

events <- rep(NA,366)

a <- data[data$Year == "2024",]

a <- a %>%
  mutate(length = 1:nrow(a)) %>%
  filter(Value == "Period")

period_days <- a$length

a <- data[data$Year == "2024",]

predicted_ovulation <- as.numeric(round(av_cycle_length - 14))

a <- a %>% 
  mutate(length = 1:nrow(a)) %>%
  filter(Cycle_Day == predicted_ovulation)

ovulation_days <- a$length
predicted_ovulations <- seq(from = max(ovulation_days), to = 366, by = round(av_cycle_length))
ovulation_days <- c(ovulation_days,predicted_ovulations)

events[period_days] <- "Actual Period"
events[ovulation_days] <- "Predicted Ovulation Days"


b <- calendR(year = 2024,
        special.days = events,
        special.col = c("pink","purple"),
        legend.pos = "right",
        orientation = "p")

ggsave("Calender.png",b,height=10,width=10,dpi=600)
knitr::include_graphics("Calender.png")
```


















